package handlers

import (
	"github.com/labstack/echo/v4"
)

func (h *Handler) Register(e *echo.Echo) {
	e.GET("/", h.Dashboard, h.IsAuthenticated)
	e.GET("/tenant/:tenant", h.Dashboard, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site", h.Dashboard, h.IsAuthenticated)

	e.GET("/auth", h.Auth)
	e.GET("/auth/confirm/:token", h.ConfirmEmail)

	e.GET("/agents", func(c echo.Context) error { return h.ListAgents(c, "", "", false) }, h.IsAuthenticated)
	e.POST("/agents", func(c echo.Context) error { return h.ListAgents(c, "", "", false) }, h.IsAuthenticated)
	e.DELETE("/agents", func(c echo.Context) error { return h.ListAgents(c, "", "", false) }, h.IsAuthenticated)
	e.GET("/agents/admit", h.AgentsAdmit, h.IsAuthenticated)
	e.POST("/agents/admit", h.AgentsAdmit, h.IsAuthenticated)
	e.GET("/agents/enable", h.AgentsEnable, h.IsAuthenticated)
	e.POST("/agents/enable", h.AgentsEnable, h.IsAuthenticated)
	e.GET("/agents/disable", h.AgentsDisable, h.IsAuthenticated)
	e.POST("/agents/disable", h.AgentsDisable, h.IsAuthenticated)
	e.GET("/agents/:uuid/delete", h.AgentDelete, h.IsAuthenticated)
	e.GET("/agents/:uuid/disable", h.AgentDisable, h.IsAuthenticated)
	e.GET("/agents/:uuid/admit", h.AgentAdmit, h.IsAuthenticated)
	e.GET("/agents/:uuid/logs", h.AgentLogs, h.IsAuthenticated)
	e.GET("/agents/:uuid/settings", h.AgentSettings, h.IsAuthenticated)
	e.POST("/agents/:uuid/settings", h.AgentSettings, h.IsAuthenticated)
	e.POST("/agents/:uuid/enabled", h.AgentEnable, h.IsAuthenticated)
	e.POST("/agents/:uuid/forcereport", h.AgentForceRun, h.IsAuthenticated)
	e.POST("/agents/:uuid/disable", h.AgentConfirmDisable, h.IsAuthenticated)
	e.POST("/agents/:uuid/admit", func(c echo.Context) error { return h.AgentConfirmAdmission(c, false) }, h.IsAuthenticated)
	e.POST("/agents/:uuid/forcerestart", h.AgentForceRestart, h.IsAuthenticated)
	e.POST("/agents/:uuid/regeneratecerts", func(c echo.Context) error { return h.AgentConfirmAdmission(c, true) }, h.IsAuthenticated)
	e.DELETE("/agents/:uuid", h.AgentConfirmDelete, h.IsAuthenticated)

	e.GET("/tenant/:tenant/agents", func(c echo.Context) error { return h.ListAgents(c, "", "", false) }, h.IsAuthenticated)
	e.POST("/tenant/:tenant/agents", func(c echo.Context) error { return h.ListAgents(c, "", "", false) }, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/agents", func(c echo.Context) error { return h.ListAgents(c, "", "", false) }, h.IsAuthenticated)
	e.GET("/tenant/:tenant/agents/admit", h.AgentsAdmit, h.IsAuthenticated)
	e.POST("/tenant/:tenant/agents/admit", h.AgentsAdmit, h.IsAuthenticated)
	e.GET("/tenant/:tenant/agents/enable", h.AgentsEnable, h.IsAuthenticated)
	e.POST("/tenant/:tenant/agents/enable", h.AgentsEnable, h.IsAuthenticated)
	e.GET("/tenant/:tenant/agents/disable", h.AgentsDisable, h.IsAuthenticated)
	e.POST("/tenant/:tenant/agents/disable", h.AgentsDisable, h.IsAuthenticated)
	e.GET("/tenant/:tenant/agents/:uuid/delete", h.AgentDelete, h.IsAuthenticated)
	e.GET("/tenant/:tenant/agents/:uuid/disable", h.AgentDisable, h.IsAuthenticated)
	e.GET("/tenant/:tenant/agents/:uuid/admit", h.AgentAdmit, h.IsAuthenticated)
	e.GET("/tenant/:tenant/agents/:uuid/logs", h.AgentLogs, h.IsAuthenticated)
	e.GET("/tenant/:tenant/agents/:uuid/settings", h.AgentSettings, h.IsAuthenticated)
	e.POST("/tenant/:tenant/agents/:uuid/settings", h.AgentSettings, h.IsAuthenticated)
	e.POST("/tenant/:tenant/agents/:uuid/enabled", h.AgentEnable, h.IsAuthenticated)
	e.POST("/tenant/:tenant/agents/:uuid/forcereport", h.AgentForceRun, h.IsAuthenticated)
	e.POST("/tenant/:tenant/agents/:uuid/disable", h.AgentConfirmDisable, h.IsAuthenticated)
	e.POST("/tenant/:tenant/agents/:uuid/admit", func(c echo.Context) error { return h.AgentConfirmAdmission(c, false) }, h.IsAuthenticated)
	e.POST("/tenant/:tenant/agents/:uuid/forcerestart", h.AgentForceRestart, h.IsAuthenticated)
	e.POST("/tenant/:tenant/agents/:uuid/regeneratecerts", func(c echo.Context) error { return h.AgentConfirmAdmission(c, true) }, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/agents/:uuid", h.AgentConfirmDelete, h.IsAuthenticated)

	e.GET("/tenant/:tenant/site/:site/agents", func(c echo.Context) error { return h.ListAgents(c, "", "", false) }, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/agents", func(c echo.Context) error { return h.ListAgents(c, "", "", false) }, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/site/:site/agents", func(c echo.Context) error { return h.ListAgents(c, "", "", false) }, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/agents/admit", h.AgentsAdmit, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/agents/admit", h.AgentsAdmit, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/agents/enable", h.AgentsEnable, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/agents/enable", h.AgentsEnable, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/agents/disable", h.AgentsDisable, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/agents/disable", h.AgentsDisable, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/agents/:uuid/delete", h.AgentDelete, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/agents/:uuid/disable", h.AgentDisable, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/agents/:uuid/admit", h.AgentAdmit, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/agents/:uuid/logs", h.AgentLogs, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/agents/:uuid/settings", h.AgentSettings, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/agents/:uuid/settings", h.AgentSettings, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/agents/:uuid/enabled", h.AgentEnable, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/agents/:uuid/forcereport", h.AgentForceRun, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/agents/:uuid/disable", h.AgentConfirmDisable, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/agents/:uuid/admit", func(c echo.Context) error { return h.AgentConfirmAdmission(c, false) }, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/agents/:uuid/forcerestart", h.AgentForceRestart, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/agents/:uuid/regeneratecerts", func(c echo.Context) error { return h.AgentConfirmAdmission(c, true) }, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/site/:site/agents/:uuid", h.AgentConfirmDelete, h.IsAuthenticated)

	e.GET("/admin", func(c echo.Context) error { return h.ListUsers(c, "", "") }, h.IsAuthenticated)
	e.POST("/admin", func(c echo.Context) error { return h.ListUsers(c, "", "") }, h.IsAuthenticated)
	e.GET("/admin/users", func(c echo.Context) error { return h.ListUsers(c, "", "") }, h.IsAuthenticated)
	e.POST("/admin/users", func(c echo.Context) error { return h.ListUsers(c, "", "") }, h.IsAuthenticated)
	e.GET("/admin/tenants", func(c echo.Context) error { return h.ListTenants(c, "", "", false) }, h.IsAuthenticated)
	e.POST("/admin/tenants", func(c echo.Context) error { return h.ListTenants(c, "", "", false) }, h.IsAuthenticated)
	e.GET("/admin/users/new", h.NewUser, h.IsAuthenticated)
	e.POST("/admin/users/import", h.ImportUsers, h.IsAuthenticated)
	e.GET("/admin/users/:uid/profile", h.EditUser, h.IsAuthenticated)
	e.POST("/admin/users/:uid/profile", h.EditUser, h.IsAuthenticated)
	e.POST("/admin/users/:uid/certificate", h.RequestUserCertificate, h.IsAuthenticated)
	e.POST("/admin/users/:uid/renewcertificate", h.RenewUserCertificate, h.IsAuthenticated)
	e.POST("/admin/users/new", h.AddUser, h.IsAuthenticated)
	e.POST("/admin/users/:uid/askconfirm", h.AskForConfirmation, h.IsAuthenticated)
	e.POST("/admin/users/:uid/confirmemail", h.SetEmailConfirmed, h.IsAuthenticated)
	e.DELETE("/admin/users/:uid", h.DeleteUser, h.IsAuthenticated)

	e.GET("/admin/tenants/new", h.NewTenant, h.IsAuthenticated)
	e.POST("/admin/tenants/new", h.AddTenant, h.IsAuthenticated)
	e.POST("/admin/tenants/import", h.ImportTenants, h.IsAuthenticated)
	e.GET("/admin/tenants/:tenant", h.EditTenant, h.IsAuthenticated)
	e.POST("/admin/tenants/:tenant", h.EditTenant, h.IsAuthenticated)
	e.GET("/admin/tenants/:tenant/confirm-delete", func(c echo.Context) error { return h.ListTenants(c, "", "", true) }, h.IsAuthenticated)
	e.DELETE("/admin/tenants/:tenant", h.DeleteTenant, h.IsAuthenticated)

	e.GET("/admin/sessions", func(c echo.Context) error { successMessage := ""; return h.ListSessions(c, successMessage) }, h.IsAuthenticated)
	e.GET("/admin/sessions/:token/delete", h.SessionDelete)
	e.DELETE("/admin/sessions/:token", h.SessionConfirmDelete, h.IsAuthenticated)
	e.GET("/admin/smtp", h.SMTPSettings, h.IsAuthenticated)
	e.POST("/admin/smtp", h.SMTPSettings, h.IsAuthenticated)
	e.POST("/admin/smtp/test", h.TestSMTPSettings, h.IsAuthenticated)
	e.GET("/admin/settings", h.GeneralSettings, h.IsAuthenticated)
	e.POST("/admin/settings", h.GeneralSettings, h.IsAuthenticated)
	e.GET("/admin/certificates", h.ListCertificates, h.IsAuthenticated)
	e.POST("/admin/certificates", h.CertificateConfirmRevocation, h.IsAuthenticated)
	e.DELETE("/admin/certificates", h.RevocateCertificate, h.IsAuthenticated)
	e.GET("/admin/update-servers", h.UpdateServers, h.IsAuthenticated)
	e.POST("/admin/update-servers", h.UpdateServers, h.IsAuthenticated)
	e.DELETE("/admin/update-servers/:serverId", h.UpdateServers, h.IsAuthenticated)
	e.POST("/admin/update-servers/confirm", h.UpdateServersConfirm, h.IsAuthenticated)
	e.POST("/admin/confirm-delete-server/:serverId", h.DeleteServerConfirm, h.IsAuthenticated)

	e.GET("/tenant/:tenant/admin", h.TagManager, h.IsAuthenticated)
	e.POST("/tenant/:tenant/admin", h.TagManager, h.IsAuthenticated)
	e.GET("/tenant/:tenant/admin/tags", h.TagManager, h.IsAuthenticated)
	e.POST("/tenant/:tenant/admin/tags", h.TagManager, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/admin/tags", h.TagManager, h.IsAuthenticated)
	e.GET("/tenant/:tenant/admin/metadata", h.OrgMetadataManager, h.IsAuthenticated)
	e.POST("/tenant/:tenant/admin/metadata", h.OrgMetadataManager, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/admin/metadata", h.OrgMetadataManager, h.IsAuthenticated)
	e.GET("/tenant/:tenant/admin/rustdesk", h.RustDeskSettings, h.IsAuthenticated)
	e.POST("/tenant/:tenant/admin/rustdesk", h.RustDeskSettings, h.IsAuthenticated)
	e.GET("/tenant/:tenant/admin/smtp", h.SMTPSettings, h.IsAuthenticated)
	e.POST("/tenant/:tenant/admin/smtp", h.SMTPSettings, h.IsAuthenticated)
	e.POST("/tenant/:tenant/admin/smtp/test", h.TestSMTPSettings, h.IsAuthenticated)
	e.GET("/tenant/:tenant/admin/settings", h.GeneralSettings, h.IsAuthenticated)
	e.POST("/tenant/:tenant/admin/settings", h.GeneralSettings, h.IsAuthenticated)
	e.GET("/tenant/:tenant/admin/update-agents", h.UpdateAgents, h.IsAuthenticated)
	e.POST("/tenant/:tenant/admin/update-agents", h.UpdateAgents, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/admin/update-agents", h.UpdateAgents, h.IsAuthenticated)
	e.POST("/tenant/:tenant/admin/update-agents/confirm", h.UpdateAgentsConfirm, h.IsAuthenticated)
	e.POST("/tenant/:tenant/admin/inherit", h.ApplyGlobalSettings, h.IsAuthenticated)
	e.GET("/tenant/:tenant/admin/sites", func(c echo.Context) error { return h.ListSites(c, "", "", false) }, h.IsAuthenticated)
	e.GET("/tenant/:tenant/admin/sites/new", h.NewSite, h.IsAuthenticated)
	e.POST("/tenant/:tenant/admin/sites/new", h.AddSite, h.IsAuthenticated)
	e.POST("/tenant/:tenant/admin/sites/import", h.ImportSites, h.IsAuthenticated)
	e.GET("/tenant/:tenant/admin/sites/:site", h.EditSite, h.IsAuthenticated)
	e.POST("/tenant/:tenant/admin/sites/:site", h.EditSite, h.IsAuthenticated)
	e.GET("/tenant/:tenant/admin/sites/:site/confirm-delete", func(c echo.Context) error { return h.ListSites(c, "", "", true) }, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/admin/sites/:site", h.DeleteSite, h.IsAuthenticated)

	e.GET("/dashboard", h.Dashboard, h.IsAuthenticated)
	e.GET("/tenant/:tenant/dashboard", h.Dashboard, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/dashboard", h.Dashboard, h.IsAuthenticated)

	e.GET("/deploy", h.DeployInstall, h.IsAuthenticated)
	e.GET("/deploy/install", h.DeployInstall, h.IsAuthenticated)
	e.GET("/deploy/uninstall", h.DeployUninstall, h.IsAuthenticated)
	e.GET("/deploy/searchinstall", h.DeployInstall, h.IsAuthenticated)
	e.POST("/deploy/searchinstall", func(c echo.Context) error { return h.SearchPackagesAction(c, true) }, h.IsAuthenticated)
	e.GET("/deploy/searchuninstall", h.DeployUninstall, h.IsAuthenticated)
	e.POST("/deploy/searchuninstall", func(c echo.Context) error { return h.SearchPackagesAction(c, false) }, h.IsAuthenticated)
	e.GET("/deploy/selectpackagedeployment", h.SelectPackageDeployment, h.IsAuthenticated)
	e.POST("/deploy/selectpackagedeployment", h.DeployPackageToSelectedAgents, h.IsAuthenticated)

	e.GET("/tenant/:tenant/deploy", h.DeployInstall, h.IsAuthenticated)
	e.GET("/tenant/:tenant/deploy/install", h.DeployInstall, h.IsAuthenticated)
	e.GET("/tenant/:tenant/deploy/uninstall", h.DeployUninstall, h.IsAuthenticated)
	e.GET("/tenant/:tenant/deploy/searchinstall", h.DeployInstall, h.IsAuthenticated)
	e.POST("/tenant/:tenant/deploy/searchinstall", func(c echo.Context) error { return h.SearchPackagesAction(c, true) }, h.IsAuthenticated)
	e.GET("/tenant/:tenant/deploy/searchuninstall", h.DeployUninstall, h.IsAuthenticated)
	e.POST("/tenant/:tenant/deploy/searchuninstall", func(c echo.Context) error { return h.SearchPackagesAction(c, false) }, h.IsAuthenticated)
	e.GET("/tenant/:tenant/deploy/selectpackagedeployment", h.SelectPackageDeployment, h.IsAuthenticated)
	e.POST("/tenant/:tenant/deploy/selectpackagedeployment", h.DeployPackageToSelectedAgents, h.IsAuthenticated)

	e.GET("/tenant/:tenant/site/:site/deploy", h.DeployInstall, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/deploy/install", h.DeployInstall, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/deploy/uninstall", h.DeployUninstall, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/deploy/searchinstall", h.DeployInstall, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/deploy/searchinstall", func(c echo.Context) error { return h.SearchPackagesAction(c, true) }, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/deploy/searchuninstall", h.DeployUninstall, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/deploy/searchuninstall", func(c echo.Context) error { return h.SearchPackagesAction(c, false) }, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/deploy/selectpackagedeployment", h.SelectPackageDeployment, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/deploy/selectpackagedeployment", h.DeployPackageToSelectedAgents, h.IsAuthenticated)

	e.GET("/computers", func(c echo.Context) error { return h.ComputersList(c, "", false) }, h.IsAuthenticated)
	e.POST("/computers", func(c echo.Context) error { return h.ComputersList(c, "", false) }, h.IsAuthenticated)
	e.DELETE("/computers", func(c echo.Context) error { return h.ComputersList(c, "", false) }, h.IsAuthenticated)
	e.GET("/computers/:uuid", h.Overview, h.IsAuthenticated)
	e.DELETE("/computers/:uuid", h.ComputerConfirmDelete, h.IsAuthenticated)
	e.GET("/computers/:uuid/overview", h.Overview, h.IsAuthenticated)
	e.POST("/computers/:uuid/overview", h.Overview, h.IsAuthenticated)
	e.GET("/computers/:uuid/software", h.Apps, h.IsAuthenticated)
	e.POST("/computers/:uuid/software", h.Apps, h.IsAuthenticated)
	e.GET("/computers/:uuid/hardware", h.Computer, h.IsAuthenticated)
	e.GET("/computers/:uuid/logical-disks", h.LogicalDisks, h.IsAuthenticated)
	e.POST("/computers/:uuid/logical-disks", h.BrowseLogicalDisk, h.IsAuthenticated)
	e.POST("/computers/:uuid/logical-disks/file", h.UploadFile, h.IsAuthenticated)
	e.PUT("/computers/:uuid/logical-disks/file", h.RenameItem, h.IsAuthenticated)
	e.POST("/computers/:uuid/logical-disks/downloadfile", h.DownloadFile, h.IsAuthenticated)
	e.POST("/computers/:uuid/logical-disks/downloadfolder", h.DownloadFolderAsZIP, h.IsAuthenticated)
	e.POST("/computers/:uuid/logical-disks/downloadmany", h.DownloadManyAsZIP, h.IsAuthenticated)
	e.DELETE("/computers/:uuid/logical-disks/file", h.DeleteItem, h.IsAuthenticated)
	e.POST("/computers/:uuid/logical-disks/folder", h.NewFolder, h.IsAuthenticated)
	e.PUT("/computers/:uuid/logical-disks/folder", h.RenameItem, h.IsAuthenticated)
	e.DELETE("/computers/:uuid/logical-disks/folder", h.DeleteItem, h.IsAuthenticated)
	e.DELETE("/computers/:uuid/logical-disks/many", h.DeleteMany, h.IsAuthenticated)
	e.GET("/computers/:uuid/monitors", h.Monitors, h.IsAuthenticated)
	e.GET("/computers/:uuid/network-adapters", h.NetworkAdapters, h.IsAuthenticated)
	e.GET("/computers/:uuid/os", h.OperatingSystem, h.IsAuthenticated)
	e.GET("/computers/:uuid/printers", h.Printers, h.IsAuthenticated)
	e.GET("/computers/:uuid/shares", h.Shares, h.IsAuthenticated)
	e.GET("/computers/:uuid/remote-assistance", h.RemoteAssistance, h.IsAuthenticated)
	e.GET("/computers/:uuid/power", h.PowerManagement, h.IsAuthenticated)
	e.POST("/computers/:uuid/power/:action", h.PowerManagement, h.IsAuthenticated)
	e.GET("/computers/:uuid/notes", h.Notes, h.IsAuthenticated)
	e.POST("/computers/:uuid/notes", h.Notes, h.IsAuthenticated)
	e.GET("/computers/:uuid/deploy", func(c echo.Context) error { return h.ComputerDeploy(c, "") }, h.IsAuthenticated)
	e.POST("/computers/:uuid/deploy", func(c echo.Context) error { return h.ComputerDeploy(c, "") }, h.IsAuthenticated)
	e.GET("/computers/:uuid/deploy/searchinstall", func(c echo.Context) error { return h.ComputerDeploy(c, "") }, h.IsAuthenticated)
	e.POST("/computers/:uuid/deploy/searchinstall", h.ComputerDeploySearchPackagesInstall, h.IsAuthenticated)
	e.POST("/computers/:uuid/deploy/install", h.ComputerDeployInstall, h.IsAuthenticated)
	e.POST("/computers/:uuid/deploy/update", h.ComputerDeployUpdate, h.IsAuthenticated)
	e.POST("/computers/:uuid/deploy/uninstall", h.ComputerDeployUninstall, h.IsAuthenticated)
	e.GET("/computers/:uuid/metadata", h.ComputerMetadata, h.IsAuthenticated)
	e.POST("/computers/:uuid/metadata", h.ComputerMetadata, h.IsAuthenticated)
	e.DELETE("/computers/:uuid/metadata", h.ComputerMetadata, h.IsAuthenticated)
	e.GET("/computers/:uuid/startvnc", h.ComputerStartVNC, h.IsAuthenticated)
	e.POST("/computers/:uuid/startvnc", h.ComputerStartVNC, h.IsAuthenticated)
	e.POST("/computers/:uuid/stopvnc", h.ComputerStopVNC, h.IsAuthenticated)
	e.POST("/computers/:uuid/generaterdp", h.GenerateRDPFile, h.IsAuthenticated)
	e.POST("/computers/:uuid/printers/:printer/default", h.SetDefaultPrinter, h.IsAuthenticated)
	e.DELETE("/computers/:uuid/printers/:printer", h.RemovePrinter, h.IsAuthenticated)
	e.POST("/computers/:uuid/sites", h.GetDropdownSites, h.IsAuthenticated)
	e.POST("/computers/:uuid/nickname", h.Nickname, h.IsAuthenticated)
	e.POST("/computers/:uuid/startrustdesk", h.RustDeskStart, h.IsAuthenticated)
	e.POST("/computers/:uuid/stoprustdesk", h.RustDeskStop, h.IsAuthenticated)

	e.GET("/tenant/:tenant/computers", func(c echo.Context) error { return h.ComputersList(c, "", false) }, h.IsAuthenticated)
	e.POST("/tenant/:tenant/computers", func(c echo.Context) error { return h.ComputersList(c, "", false) }, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/computers", func(c echo.Context) error { return h.ComputersList(c, "", false) }, h.IsAuthenticated)
	e.GET("/tenant/:tenant/computers/:uuid", h.Overview, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/computers/:uuid", h.ComputerConfirmDelete, h.IsAuthenticated)
	e.GET("/tenant/:tenant/computers/:uuid/overview", h.Overview, h.IsAuthenticated)
	e.POST("/tenant/:tenant/computers/:uuid/overview", h.Overview, h.IsAuthenticated)
	e.GET("/tenant/:tenant/computers/:uuid/software", h.Apps, h.IsAuthenticated)
	e.POST("/tenant/:tenant/computers/:uuid/software", h.Apps, h.IsAuthenticated)
	e.GET("/tenant/:tenant/computers/:uuid/hardware", h.Computer, h.IsAuthenticated)
	e.GET("/tenant/:tenant/computers/:uuid/logical-disks", h.LogicalDisks, h.IsAuthenticated)
	e.POST("/tenant/:tenant/computers/:uuid/logical-disks", h.BrowseLogicalDisk, h.IsAuthenticated)
	e.POST("/tenant/:tenant/computers/:uuid/logical-disks/file", h.UploadFile, h.IsAuthenticated)
	e.PUT("/tenant/:tenant/computers/:uuid/logical-disks/file", h.RenameItem, h.IsAuthenticated)
	e.POST("/tenant/:tenant/computers/:uuid/logical-disks/downloadfile", h.DownloadFile, h.IsAuthenticated)
	e.POST("/tenant/:tenant/computers/:uuid/logical-disks/downloadfolder", h.DownloadFolderAsZIP, h.IsAuthenticated)
	e.POST("/tenant/:tenant/computers/:uuid/logical-disks/downloadmany", h.DownloadManyAsZIP, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/computers/:uuid/logical-disks/file", h.DeleteItem, h.IsAuthenticated)
	e.POST("/tenant/:tenant/computers/:uuid/logical-disks/folder", h.NewFolder, h.IsAuthenticated)
	e.PUT("/tenant/:tenant/computers/:uuid/logical-disks/folder", h.RenameItem, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/computers/:uuid/logical-disks/folder", h.DeleteItem, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/computers/:uuid/logical-disks/many", h.DeleteMany, h.IsAuthenticated)
	e.GET("/tenant/:tenant/computers/:uuid/monitors", h.Monitors, h.IsAuthenticated)
	e.GET("/tenant/:tenant/computers/:uuid/network-adapters", h.NetworkAdapters, h.IsAuthenticated)
	e.GET("/tenant/:tenant/computers/:uuid/os", h.OperatingSystem, h.IsAuthenticated)
	e.GET("/tenant/:tenant/computers/:uuid/printers", h.Printers, h.IsAuthenticated)
	e.GET("/tenant/:tenant/computers/:uuid/shares", h.Shares, h.IsAuthenticated)
	e.GET("/tenant/:tenant/computers/:uuid/remote-assistance", h.RemoteAssistance, h.IsAuthenticated)
	e.GET("/tenant/:tenant/computers/:uuid/power", h.PowerManagement, h.IsAuthenticated)
	e.POST("/tenant/:tenant/computers/:uuid/power/:action", h.PowerManagement, h.IsAuthenticated)
	e.GET("/tenant/:tenant/computers/:uuid/notes", h.Notes, h.IsAuthenticated)
	e.POST("/tenant/:tenant/computers/:uuid/notes", h.Notes, h.IsAuthenticated)
	e.GET("/tenant/:tenant/computers/:uuid/deploy", func(c echo.Context) error { return h.ComputerDeploy(c, "") }, h.IsAuthenticated)
	e.POST("/tenant/:tenant/computers/:uuid/deploy", func(c echo.Context) error { return h.ComputerDeploy(c, "") }, h.IsAuthenticated)
	e.GET("/tenant/:tenant/computers/:uuid/deploy/searchinstall", func(c echo.Context) error { return h.ComputerDeploy(c, "") }, h.IsAuthenticated)
	e.POST("/tenant/:tenant/computers/:uuid/deploy/searchinstall", h.ComputerDeploySearchPackagesInstall, h.IsAuthenticated)
	e.POST("/tenant/:tenant/computers/:uuid/deploy/install", h.ComputerDeployInstall, h.IsAuthenticated)
	e.POST("/tenant/:tenant/computers/:uuid/deploy/update", h.ComputerDeployUpdate, h.IsAuthenticated)
	e.POST("/tenant/:tenant/computers/:uuid/deploy/uninstall", h.ComputerDeployUninstall, h.IsAuthenticated)
	e.GET("/tenant/:tenant/computers/:uuid/metadata", h.ComputerMetadata, h.IsAuthenticated)
	e.POST("/tenant/:tenant/computers/:uuid/metadata", h.ComputerMetadata, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/computers/:uuid/metadata", h.ComputerMetadata, h.IsAuthenticated)
	e.GET("/tenant/:tenant/computers/:uuid/startvnc", h.ComputerStartVNC, h.IsAuthenticated)
	e.POST("/tenant/:tenant/computers/:uuid/startvnc", h.ComputerStartVNC, h.IsAuthenticated)
	e.POST("/tenant/:tenant/computers/:uuid/stopvnc", h.ComputerStopVNC, h.IsAuthenticated)
	e.POST("/tenant/:tenant/computers/:uuid/generaterdp", h.GenerateRDPFile, h.IsAuthenticated)
	e.POST("/tenant/:tenant/computers/:uuid/printers/:printer/default", h.SetDefaultPrinter, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/computers/:uuid/printers/:printer", h.RemovePrinter, h.IsAuthenticated)
	e.POST("/tenant/:tenant/computers/:uuid/nickname", h.Nickname, h.IsAuthenticated)

	e.GET("/tenant/:tenant/site/:site/computers", func(c echo.Context) error { return h.ComputersList(c, "", false) }, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/computers", func(c echo.Context) error { return h.ComputersList(c, "", false) }, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/site/:site/computers", func(c echo.Context) error { return h.ComputersList(c, "", false) }, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/computers/:uuid", h.Overview, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/site/:site/computers/:uuid", h.ComputerConfirmDelete, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/computers/:uuid/overview", h.Overview, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/computers/:uuid/overview", h.Overview, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/computers/:uuid/software", h.Apps, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/computers/:uuid/software", h.Apps, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/computers/:uuid/hardware", h.Computer, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/computers/:uuid/logical-disks", h.LogicalDisks, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/computers/:uuid/logical-disks", h.BrowseLogicalDisk, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/computers/:uuid/logical-disks/file", h.UploadFile, h.IsAuthenticated)
	e.PUT("/tenant/:tenant/site/:site/computers/:uuid/logical-disks/file", h.RenameItem, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/computers/:uuid/logical-disks/downloadfile", h.DownloadFile, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/computers/:uuid/logical-disks/downloadfolder", h.DownloadFolderAsZIP, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/computers/:uuid/logical-disks/downloadmany", h.DownloadManyAsZIP, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/site/:site/computers/:uuid/logical-disks/file", h.DeleteItem, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/computers/:uuid/logical-disks/folder", h.NewFolder, h.IsAuthenticated)
	e.PUT("/tenant/:tenant/site/:site/computers/:uuid/logical-disks/folder", h.RenameItem, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/site/:site/computers/:uuid/logical-disks/folder", h.DeleteItem, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/site/:site/computers/:uuid/logical-disks/many", h.DeleteMany, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/computers/:uuid/monitors", h.Monitors, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/computers/:uuid/network-adapters", h.NetworkAdapters, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/computers/:uuid/os", h.OperatingSystem, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/computers/:uuid/printers", h.Printers, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/computers/:uuid/shares", h.Shares, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/computers/:uuid/remote-assistance", h.RemoteAssistance, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/computers/:uuid/power", h.PowerManagement, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/computers/:uuid/power/:action", h.PowerManagement, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/computers/:uuid/notes", h.Notes, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/computers/:uuid/notes", h.Notes, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/computers/:uuid/deploy", func(c echo.Context) error { return h.ComputerDeploy(c, "") }, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/computers/:uuid/deploy", func(c echo.Context) error { return h.ComputerDeploy(c, "") }, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/computers/:uuid/deploy/searchinstall", func(c echo.Context) error { return h.ComputerDeploy(c, "") }, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/computers/:uuid/deploy/searchinstall", h.ComputerDeploySearchPackagesInstall, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/computers/:uuid/deploy/install", h.ComputerDeployInstall, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/computers/:uuid/deploy/update", h.ComputerDeployUpdate, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/computers/:uuid/deploy/uninstall", h.ComputerDeployUninstall, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/computers/:uuid/metadata", h.ComputerMetadata, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/computers/:uuid/metadata", h.ComputerMetadata, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/site/:site/computers/:uuid/metadata", h.ComputerMetadata, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/computers/:uuid/startvnc", h.ComputerStartVNC, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/computers/:uuid/startvnc", h.ComputerStartVNC, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/computers/:uuid/stopvnc", h.ComputerStopVNC, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/computers/:uuid/generaterdp", h.GenerateRDPFile, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/computers/:uuid/printers/:printer/default", h.SetDefaultPrinter, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/site/:site/computers/:uuid/printers/:printer", h.RemovePrinter, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/computers/:uuid/nickname", h.Nickname, h.IsAuthenticated)

	e.GET("/download/:filename", h.Download, h.IsAuthenticated)

	e.POST("/logout", h.Logout, h.IsAuthenticated)

	e.GET("/network-printers", h.NetworkPrinters, h.IsAuthenticated)

	e.POST("/packages", h.SearchWingetPackages, h.IsAuthenticated)
	e.POST("/flatpak", h.SearchFlatpakPackages, h.IsAuthenticated)
	e.POST("/brew-formulae", h.SearchHomeBrewFormulaePackages, h.IsAuthenticated)
	e.POST("/brew-casks", h.SearchHomeBrewCasksPackages, h.IsAuthenticated)

	e.GET("/profiles", func(c echo.Context) error { return h.Profiles(c, "") }, h.IsAuthenticated)
	e.GET("/profiles/new", h.NewProfile, h.IsAuthenticated)
	e.POST("/profiles/new", h.NewProfile, h.IsAuthenticated)
	e.GET("/profiles/:uuid", func(c echo.Context) error { return h.EditProfile(c, "GET", "", "") }, h.IsAuthenticated)
	e.POST("/profiles/:uuid", func(c echo.Context) error { return h.EditProfile(c, "POST", "", "") }, h.IsAuthenticated)
	e.DELETE("/profiles/:uuid", func(c echo.Context) error { return h.EditProfile(c, "DELETE", "", "") }, h.IsAuthenticated)
	e.POST("/profiles/:uuid/tags", h.ProfileTags, h.IsAuthenticated)
	e.DELETE("/profiles/:uuid/tags", h.ProfileTags, h.IsAuthenticated)
	e.GET("/profiles/:uuid/confirm-delete", h.ConfirmDeleteProfile, h.IsAuthenticated)
	e.GET("/profiles/:uuid/issues", h.ProfileIssues, h.IsAuthenticated)
	e.GET("/profiles/task-types", h.ProfileTaskTypes)
	e.GET("/profiles/task-subtypes", h.ProfileTaskSubTypes)
	e.GET("/profiles/task-definition", h.ProfileTaskDefinition)

	e.GET("/tenant/:tenant/site/:site/profiles", func(c echo.Context) error { return h.Profiles(c, "") }, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/profiles/new", h.NewProfile, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/profiles/new", h.NewProfile, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/profiles/:uuid", func(c echo.Context) error { return h.EditProfile(c, "GET", "", "") }, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/profiles/:uuid", func(c echo.Context) error { return h.EditProfile(c, "POST", "", "") }, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/site/:site/profiles/:uuid", func(c echo.Context) error { return h.EditProfile(c, "DELETE", "", "") }, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/profiles/:uuid/tags", h.ProfileTags, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/site/:site/profiles/:uuid/tags", h.ProfileTags, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/profiles/:uuid/confirm-delete", h.ConfirmDeleteProfile, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/profiles/:uuid/issues", h.ProfileIssues, h.IsAuthenticated)

	e.GET("/register", h.SignIn)
	e.POST("/register", h.SendRegister)
	e.GET("/user/:uid/exists", h.UIDExists)
	e.GET("/email/:email/exists", h.EmailExists)

	e.POST("/reports/agents", h.GenerateAgentsReport, h.IsAuthenticated)
	e.POST("/reports/computers", h.GenerateComputersReport, h.IsAuthenticated)
	e.POST("/reports/antivirus", h.GenerateAntivirusReport, h.IsAuthenticated)
	e.POST("/reports/updates", h.GenerateUpdatesReport, h.IsAuthenticated)
	e.POST("/reports/software", h.GenerateSoftwareReport, h.IsAuthenticated)
	e.POST("/reports/computer/:uuid", h.GenerateComputerReport, h.IsAuthenticated)
	e.POST("/reports/:report/csv", h.GenerateCSVReports, h.IsAuthenticated)
	e.POST("/reports/computer/:uuid/ods", h.GenerateComputerODSReport, h.IsAuthenticated)

	e.POST("/tenant/:tenant/reports/agents", h.GenerateAgentsReport, h.IsAuthenticated)
	e.POST("/tenant/:tenant/reports/computers", h.GenerateComputersReport, h.IsAuthenticated)
	e.POST("/tenant/:tenant/reports/antivirus", h.GenerateAntivirusReport, h.IsAuthenticated)
	e.POST("/tenant/:tenant/reports/updates", h.GenerateUpdatesReport, h.IsAuthenticated)
	e.POST("/tenant/:tenant/reports/software", h.GenerateSoftwareReport, h.IsAuthenticated)
	e.POST("/tenant/:tenant/reports/computer/:uuid", h.GenerateComputerReport, h.IsAuthenticated)
	e.POST("/tenant/:tenant/reports/:report/csv", h.GenerateCSVReports, h.IsAuthenticated)
	e.POST("/tenant/:tenant/reports/computer/:uuid/ods", h.GenerateComputerODSReport, h.IsAuthenticated)

	e.POST("/tenant/:tenant/site/:site/reports/agents", h.GenerateAgentsReport, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/reports/computers", h.GenerateComputersReport, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/reports/antivirus", h.GenerateAntivirusReport, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/reports/updates", h.GenerateUpdatesReport, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/reports/software", h.GenerateSoftwareReport, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/reports/computer/:uuid", h.GenerateComputerReport, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/reports/:report/csv", h.GenerateCSVReports, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/reports/computer/:uuid/ods", h.GenerateComputerODSReport, h.IsAuthenticated)

	e.GET("/security", h.ListAntivirusStatus, h.IsAuthenticated)
	e.POST("/security", h.ListAntivirusStatus, h.IsAuthenticated)
	e.GET("/security/:uuid/updates", h.ListLatestUpdates, h.IsAuthenticated)
	e.POST("/security/:uuid/updates", h.ListLatestUpdates, h.IsAuthenticated)
	e.GET("/security/antivirus", h.ListAntivirusStatus, h.IsAuthenticated)
	e.POST("/security/antivirus", h.ListAntivirusStatus, h.IsAuthenticated)
	e.GET("/security/updates", h.ListSecurityUpdatesStatus, h.IsAuthenticated)
	e.POST("/security/updates", h.ListSecurityUpdatesStatus, h.IsAuthenticated)

	e.GET("/tenant/:tenant/security", h.ListAntivirusStatus, h.IsAuthenticated)
	e.POST("/tenant/:tenant/security", h.ListAntivirusStatus, h.IsAuthenticated)
	e.GET("/tenant/:tenant/security/:uuid/updates", h.ListLatestUpdates, h.IsAuthenticated)
	e.POST("/tenant/:tenant/security/:uuid/updates", h.ListLatestUpdates, h.IsAuthenticated)
	e.GET("/tenant/:tenant/security/antivirus", h.ListAntivirusStatus, h.IsAuthenticated)
	e.POST("/tenant/:tenant/security/antivirus", h.ListAntivirusStatus, h.IsAuthenticated)
	e.GET("/tenant/:tenant/security/updates", h.ListSecurityUpdatesStatus, h.IsAuthenticated)
	e.POST("/tenant/:tenant/security/updates", h.ListSecurityUpdatesStatus, h.IsAuthenticated)

	e.GET("/tenant/:tenant/site/:site/security", h.ListAntivirusStatus, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/security", h.ListAntivirusStatus, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/security/:uuid/updates", h.ListLatestUpdates, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/security/:uuid/updates", h.ListLatestUpdates, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/security/antivirus", h.ListAntivirusStatus, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/security/antivirus", h.ListAntivirusStatus, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/security/updates", h.ListSecurityUpdatesStatus, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/security/updates", h.ListSecurityUpdatesStatus, h.IsAuthenticated)

	e.GET("/software", h.Software, h.IsAuthenticated)
	e.POST("/software", h.Software, h.IsAuthenticated)

	e.GET("/tenant/:tenant/software", h.Software, h.IsAuthenticated)
	e.POST("/tenant/:tenant/software", h.Software, h.IsAuthenticated)

	e.GET("/tenant/:tenant/site/:site/software", h.Software, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/software", h.Software, h.IsAuthenticated)

	e.GET("/tasks/:profile/new", h.NewTask, h.IsAuthenticated)
	e.POST("/tasks/:profile/new", h.NewTask, h.IsAuthenticated)
	e.GET("/tasks/:id", h.EditTask, h.IsAuthenticated)
	e.POST("/tasks/:id", h.EditTask, h.IsAuthenticated)
	e.DELETE("/tasks/:id", h.EditTask, h.IsAuthenticated)
	e.GET("/tasks/:profile/confirm-delete/:task", h.ConfirmDeleteTask, h.IsAuthenticated)

	e.GET("/tenant/:tenant/site/:site/tasks/:profile/new", h.NewTask, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/tasks/:profile/new", h.NewTask, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/tasks/:id", h.EditTask, h.IsAuthenticated)
	e.POST("/tenant/:tenant/site/:site/tasks/:id", h.EditTask, h.IsAuthenticated)
	e.DELETE("/tenant/:tenant/site/:site/tasks/:id", h.EditTask, h.IsAuthenticated)
	e.GET("/tenant/:tenant/site/:site/tasks/:profile/confirm-delete/:task", h.ConfirmDeleteTask, h.IsAuthenticated)

	e.POST("/render-markdown", h.RenderMarkdown, h.IsAuthenticated)
}

func (h *Handler) IsAuthenticated(next echo.HandlerFunc) echo.HandlerFunc {
	return func(c echo.Context) error {
		// Redirect to Login if user has no session
		if !h.SessionManager.Manager.Exists(c.Request().Context(), "uid") {
			return h.Login(c)
		}

		return next(c)
	}
}
